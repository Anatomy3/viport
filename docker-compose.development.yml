version: '3.8'

services:
  # Development Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/viport_dev
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=dev-secret-key
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - viport-dev-network
    restart: unless-stopped

  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: viport_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - viport-dev-network
    restart: unless-stopped

  # Redis Cache for Development
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - viport-dev-network
    restart: unless-stopped

  # Adminer for Database Management
  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - viport-dev-network
    restart: unless-stopped

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - viport-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  viport-dev-network:
    driver: bridge