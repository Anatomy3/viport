# =============================================================================
# VIPORT MONOREPO - PRODUCTION DOCKER COMPOSE
# =============================================================================
# This docker-compose file is for production deployment

version: '3.8'

services:
  # =============================================================================
  # WEB APPLICATION
  # =============================================================================
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - GO_BACKEND_URL=http://backend:8080
      - DATABASE_URL=postgresql://viport:viport123@postgres:5432/viport_prod
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - backend
    restart: unless-stopped
    networks:
      - viport-network

  # =============================================================================
  # GO BACKEND API
  # =============================================================================
  backend:
    image: viport/backend:latest
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - DATABASE_URL=postgresql://viport:viport123@postgres:5432/viport_prod
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - PORT=8080
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - viport-network

  # =============================================================================
  # DATABASE
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=viport
      - POSTGRES_PASSWORD=viport123
      - POSTGRES_DB=viport_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d/
    restart: unless-stopped
    networks:
      - viport-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U viport -d viport_prod"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # REDIS CACHE
  # =============================================================================
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - viport-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # NGINX REVERSE PROXY
  # =============================================================================
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - backend
    restart: unless-stopped
    networks:
      - viport-network

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  viport-network:
    driver: bridge